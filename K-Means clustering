import numpy as np
import cv2
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Step 1: Load the image
image = cv2.imread('apple image.jpg')  # Load in BGR by default
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)  # Convert to RGB for plotting

# Step 2: Reshape the image to a 2D array of pixels
pixels = image.reshape(-1, 3)  # Each row is a pixel (R, G, B)

# Step 3: Apply K-Means clustering
K = 3  # Number of color clusters
kmeans = KMeans(n_clusters=K, random_state=42)
kmeans.fit(pixels)

# Step 4: Replace each pixel with its corresponding cluster center
segmented_image = kmeans.cluster_centers_[kmeans.labels_]
segmented_image = segmented_image.reshape(image.shape)  # Reshape back to original image shape

# Step 5: Display the original and segmented images
plt.figure(figsize=(10, 5))

# Original image
plt.subplot(1, 2, 1)
plt.imshow(image)
plt.title('Original Image')
plt.axis('off')

# Segmented image
plt.subplot(1, 2, 2)
plt.imshow(segmented_image.astype(np.uint8))  # Convert float to uint8 for proper display
plt.title(f'Segmented Image with K={K}')
plt.axis('off')
plt.tight_layout()
plt.show()
